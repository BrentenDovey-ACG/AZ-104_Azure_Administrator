clear # clear command will clear up the cloud shell display and bring the command prompt to the top of the terminal window

az group list # Azure CLI command that allows us to list out resource groups

Get-AzResourceGroup # PowerShell cmdlet that allows us to get information about resource groups

$rgs = Get-AzResourceGroup # Output our resource groups by name as tab separated values and assign it to a variable

$rgs # call the variable to return information stored in the variable

# Create VM and configuration details for deployment
az vm create `
--resource-group $rgs.ResourceGroupName `
--location $rgs.Location
--name vm-demo-001 `
--image UbuntuLTS `
--admin-username cloudchase `
--generate-ssh-keys `
--no-wait

Get-AzResource | Format-Table # Get all Azure resources in table format

# DO NOT RUN IN PRODUCTION ###################################################################################################################################
# WARNING: This block of code is extremely destructive and will delete all resource(s) forcefully excluding only the storage account configured for cloudshell
Get-AzResource | ForEach-Object {
    # Set variables
    $resource = $_
    $resourceName = $resource.Name
    $resourceId = $resource.ResourceId
    $cloudShellStorage = (Get-CloudDrive).StorageAccountName

    # If/Else Logic to avoid deleting cloudsh
    if ($resourceName -eq $cloudShellStorage) {
        "Skipping... $resourceName"
    }
    else {
        try {
            "Deleting... $resourceName"
            Remove-AzResource -Id $resourceId -Force
        }
        catch {
            "Failed to Delete... $resourceName"
        }
    }
}

